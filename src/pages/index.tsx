import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import {
  today,
  startOfMonth,
  endOfMonth,
  getLocalTimeZone,
  parseAbsolute,
  parseAbsoluteToLocal
} from "@internationalized/date";
import { trpc } from "../utils/trpc";
import dynamic from "next/dynamic";
import { useState } from "react";

const DateRangePicker = dynamic(
  async () => {
    const mod = await import("../components/DateRangePicker/index");
    return mod.DateRangePicker;
  },
  {
    ssr: false,
  }
);

const Home: NextPage = () => {
  const [filterDates, setFilterDates] = useState({
    start: startOfMonth(today(getLocalTimeZone())),
    end: endOfMonth(today(getLocalTimeZone())),
  });

  const ritten = trpc.useQuery(["rit.getAll"], {
    select: (data) => {
      return data.filter((rit) => {
        const date = parseAbsoluteToLocal(rit.date.toISOString())
        const startCompare = date.compare(filterDates?.start ?? startOfMonth(today(getLocalTimeZone())));
        const beforeStart = startCompare < 0;
        const endCompare = date.compare(filterDates?.end ?? endOfMonth(today(getLocalTimeZone())));
        const afterEnd = endCompare > 0;

        return !beforeStart && !afterEnd;
      });
    },
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col justify-center min-h-screen p-4 gap-4">
        <h2 className="text-2xl text-slate-700">Filteren</h2>
        <DateRangePicker
          label="Datum"
          value={filterDates}
          onChange={setFilterDates}
        />
        <table className="w-full divide-y divide-gray-300 shadow-sm focus-within:border-indigo-300 focus-within:ring-8 ring-offset-8 focus-within:ring-indigo-200 focus-within:ring-opacity-50 rounded-md">
          <thead className="bg-gray-50">
            <tr>
              <th
                scope="col"
                className="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 rounded-tl-md"
              >
                Datum
              </th>
              <th
                scope="col"
                className="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900"
              >
                Duur
              </th>
              <th
                scope="col"
                className="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
              >
                Afstand
              </th>
              <th
                scope="col"
                className="px-3 py-3.5 text-center text-sm font-semibold text-gray-900"
              >
                CalorieÃ«n
              </th>
              <th
                scope="col"
                className="px-3 py-3.5 text-center text-sm font-semibold text-gray-900 rounded-tr-md"
              >
                Weerstand
              </th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-200 bg-white">
            {ritten?.data?.map((rit, i) => {
              let roundl = ritten.data.length - 1 === i ? "rounded-bl-md" : "";
              let roundr = ritten.data.length - 1 === i ? "rounded-br-md" : "";
              return (
                <tr
                  key={rit.id}
                  className="even:bg-slate-50 hover:bg-slate-200"
                >
                  <td
                    className={`whitespace-nowrap py-4 pl-4 pr-3 text-sm font-semibold text-gray-900 sm:pl-6 ${roundl}`}
                  >
                    <Link href={`/edit/${rit.id}`}>
                      <a>
                        {new Intl.DateTimeFormat("nl-BE", {
                          dateStyle: "medium",
                        }).format(rit.date)}
                      </a>
                    </Link>
                  </td>
                  <td className="whitespace-nowrap px-3 py-4 text-sm">
                    {new Intl.NumberFormat("nl-BE", {
                      style: "unit",
                      unit: "minute",
                      unitDisplay: "short",
                    }).format(rit.duration)}
                  </td>
                  <td className="whitespace-nowrap px-3 py-4 text-sm">
                    {new Intl.NumberFormat("nl-BE", {
                      style: "unit",
                      unit: "kilometer",
                      unitDisplay: "short",
                    }).format(rit.distance / 1000)}
                  </td>
                  <td className="whitespace-nowrap px-3 py-4 text-sm">
                    {rit.calories}
                  </td>
                  <td
                    className={`whitespace-nowrap px-3 py-4 text-sm ${roundr}`}
                  >
                    {rit.resistance}
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </main>
    </>
  );
};

export default Home;
